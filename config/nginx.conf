server {
    server_name dev.belooga.com;
    root /var/www/html/belooga/app;

    expires           0;
    add_header        Cache-Control private;
    sendfile  off;

    index index.html index.htm;
    client_max_body_size 200M;

    # try_files $uri $uri/ index.html;

    location / {
        #try_files $uri /index.html;
        try_files $uri @prerender;
    }

    location ~/public/ {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-FORWARDED_PROTO $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;


        #proxy_pass http://localhost:3000/render/$scheme://$host$request_uri?wc-inject-shadydom=true;
        proxy_pass http://localhost:3002;
    }

    location ~/blog/ {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-FORWARDED_PROTO $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;


        proxy_pass http://localhost:3002;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/dev.belooga.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/dev.belooga.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


    location @prerender {

        set $prerender 0;
        if ($http_user_agent ~* "googlebot|bingbot|yandex|baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest|slackbot|vkShare|W3C_Validator") {
            set $prerender 1;
        }
        if ($args ~ "_escaped_fragment_") {
            set $prerender 1;
        }
        if ($http_user_agent ~ "Prerender") {
            set $prerender 0;
        }
        if ($uri ~* "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|svg|eot)") {
            set $prerender 0;
        }

       # resolver kube-dns.kube-system.svc.cluster.local valid=5s;
       resolver 8.8.8.8;
        if ($prerender = 1) {
            #set $prerender "rendertron";
            rewrite .* /render/$scheme://$host$request_uri? break;
            proxy_pass http://localhost:3000;
        }
        if ($prerender = 0) {
            rewrite .* /index.html break;
        }
    }
}

server {
    if ($host = dev.belooga.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;

    server_name dev.belooga.com;
    return 404; # managed by Certbot
}
